name: Build and publish Docker images

on:
  push:
    branches: ['main']
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REPO_OWNER: ${{ github.repository_owner }}
  REPO_NAME: ${{ github.repository }}
  REPO_NAME_LOWER: ${{ github.repository_owner }}/$(echo "${{ github.repository##*/ }}" | tr '[:upper:]' '[:lower:]')

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_NAME_LOWER }}/frontend

      - name: Build and push frontend image (amd64)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./devops/frontend.Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta-frontend.outputs.tags }}-amd64
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache-frontend-amd64
          cache-to: type=local,dest=/tmp/.buildx-cache-frontend-amd64,mode=max

      - name: Build and push frontend image (arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./devops/frontend.Dockerfile
          push: true
          platforms: linux/arm64
          tags: ${{ steps.meta-frontend.outputs.tags }}-arm64
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache-frontend-arm64
          cache-to: type=local,dest=/tmp/.buildx-cache-frontend-arm64,mode=max

      - name: Create and push multi-arch manifest (frontend)
        run: |
          docker buildx imagetools create \
            -t ${{ env.REGISTRY }}/${{ env.REPO_NAME_LOWER }}/frontend:latest \
            ${{ env.REGISTRY }}/${{ env.REPO_NAME_LOWER }}/frontend:amd64 \
            ${{ env.REGISTRY }}/${{ env.REPO_NAME_LOWER }}/frontend:arm64

  build-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_NAME_LOWER }}/backend

      - name: Build and push backend image (amd64)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./devops/backend.Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta-backend.outputs.tags }}-amd64
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache-backend-amd64
          cache-to: type=local,dest=/tmp/.buildx-cache-backend-amd64,mode=max

      - name: Build and push backend image (arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./devops/backend.Dockerfile
          push: true
          platforms: linux/arm64
          tags: ${{ steps.meta-backend.outputs.tags }}-arm64
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache-backend-arm64
          cache-to: type=local,dest=/tmp/.buildx-cache-backend-arm64,mode=max

      - name: Create and push multi-arch manifest (backend)
        run: |
          docker buildx imagetools create \
            -t ${{ env.REGISTRY }}/${{ env.REPO_NAME_LOWER }}/backend:latest \
            ${{ env.REGISTRY }}/${{ env.REPO_NAME_LOWER }}/backend:amd64 \
            ${{ env.REGISTRY }}/${{ env.REPO_NAME_LOWER }}/backend:arm64
